



DiffServ Applied to Real-time Transports                    D. York, Ed.
Internet-Draft                                          Internet Society
Intended status: Standards Track                           D. Black, Ed.
Expires: December 24, 2014                                           EMC
                                                             C. Jennings
                                                                P. Jones
                                                                   Cisco
                                                           June 22, 2014


     Differentiated Services (DiffServ) and Real-time Communication
                      draft-york-dart-dscp-rtp-01

Abstract

   This document describes the interaction between Differentiated
   Services (DiffServ) network quality of service (QoS) functionality
   and real-time network communication, including communication based on
   the Real-time Transport Protocol (RTP).  DiffServ is based on network
   nodes applying different forwarding treatments to packets whose IP
   headers are marked with different DiffServ Code Points (DSCPs).  As a
   result, use of different DSCPs within a single traffic stream may
   cause transport protocol interactions (e.g., due to reordering).  In
   addition, DSCP markings may be changed or removed between the traffic
   source and destination.  This document covers the implications of
   these DiffServ aspects for real-time network communication, including
   RTCWEB.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on December 24, 2014.







York, et al.            Expires December 24, 2014               [Page 1]

Internet-Draft        DiffServ and RT Communication            June 2014


Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Requirements Language . . . . . . . . . . . . . . . . . .   3
   2.  Background  . . . . . . . . . . . . . . . . . . . . . . . . .   3
     2.1.  RTP Background  . . . . . . . . . . . . . . . . . . . . .   3
     2.2.  Differentiated Services (DiffServ) Background . . . . . .   5
     2.3.  Diffserv PHBs (Per-Hop Behaviors) . . . . . . . . . . . .   7
     2.4.  DiffServ and Transport Protocols  . . . . . . . . . . . .   8
     2.5.  Traffic Classifiers and DSCP Remarking  . . . . . . . . .   9
   3.  RTP Multiplexing Background . . . . . . . . . . . . . . . . .  10
   4.  Recommendations . . . . . . . . . . . . . . . . . . . . . . .  10
   5.  Examples  . . . . . . . . . . . . . . . . . . . . . . . . . .  11
   6.  new section . . . . . . . . . . . . . . . . . . . . . . . . .  12
   7.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  12
   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  12
   9.  Security Considerations . . . . . . . . . . . . . . . . . . .  13
   10. References  . . . . . . . . . . . . . . . . . . . . . . . . .  13
     10.1.  Normative References . . . . . . . . . . . . . . . . . .  13
     10.2.  Informative References . . . . . . . . . . . . . . . . .  13
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  15

1.  Introduction

   This document describes the interactions between Differentiated
   Services (DiffServ) network quality of service (QoS) functionality
   [RFC2475] and real-time network communication, including
   communication based on the Real-time Transport Protocol (RTP)
   [RFC3550].  DiffServ is based on network nodes applying different
   forwarding treatments to packets whose IP headers are marked with
   different DiffServ Code Points (DSCPs)[RFC2474].  As a result use of
   different DSCPs within a single traffic stream may cause transport
   protocol interactions (e.g., due to reordering).  In addition, DSCP



York, et al.            Expires December 24, 2014               [Page 2]

Internet-Draft        DiffServ and RT Communication            June 2014


   markings may be changed or removed between the traffic's source and
   destination.  This document covers the implications of these DiffServ
   aspects for real-time network communication, including RTCWEB traffic
   [I-D.ietf-rtcweb-overview].

1.1.  Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].

2.  Background

   Real-time communications enables communication in real-time over an
   IP network using communication modalities, such as voice, video,
   text, content sharing, etc.  It is possible to utilize any one or
   more modalities in parallel in order to provide for a richer
   communication experience.

   A simple example of real-time communications is a voice call placed
   over the Internet wherein an audio stream is transmitted in each
   direction between two users.  A more complex example is an immersive
   videoconferencing system that has multiple video screens, multiple
   cameras, multiple microphones, and some means of sharing content.
   For such complex systems, there may be multiple media streams that
   may be transmitted via a single IP address and port or via multiple
   IP addresses and ports.

2.1.  RTP Background

   The most common protocol used for real time media is the Real-Time
   Transport Protocol (RTP) [RFC3550].  RTP defines the mechanism by
   which real-time data is transmitted between hosts on the Internet.
   RTP terminology usage has been inconsistent, for example, this
   document on RTP grouping
   terminology[I-D.ietf-avtext-rtp-grouping-taxonomy] observes that:

      RFC 3550 [RFC3550] uses the terms media stream, audio stream,
      video stream and streams of (RTP) packets interchangeably.

   T\erminology in this document follows that RTP grouping terminology
   document[I-D.ietf-avtext-rtp-grouping-taxonomy]" with the following
   terms being of particular importance (see that terminology document
   for full definitions):

   Source Stream  A reference clock synchronized, time progressing,
      digital media stream.




York, et al.            Expires December 24, 2014               [Page 3]

Internet-Draft        DiffServ and RT Communication            June 2014


   RTP Packet Stream  A stream of RTP packets containing media data,
      which may be source data or redundant data.  The RTP Packet Stream
      is identified by an RTP synchronization source (SSRC) belonging to
      a particular RTP session.

   Media encoding and packetization of a source stream results in a
   source RTP packet stream plus zero or more redundancy RTP packet
   streams that provide resilience against loss of packets from the
   source RTP packet stream [I-D.ietf-avtext-rtp-grouping-taxonomy].
   With most applications, a single media type (e.g., audio) is
   transmitted within a single RTP session.  However, it is possible to
   transmit multiple, distinct source streams over the same RTP session
   as one or more individual RTP packet streams (each).  This is
   referred to as RTP multiplexing.

   The number of source streams and RTP packet streams in an overall
   real-time interaction can be surprisingly large.  In addition to a
   voice source stream and a video source stream, there could be
   separate source streams for each of the cameras or microphones on a
   videoconferencing system.  For each of those video source streams,
   and especially for layered video codecs, there might be additional
   RTP packet streams that carry spatial and temporal data separately
   from the base layer.  An noted above, there might also be separate
   redundancy RTP packet streams that provide protection to a source RTP
   packet stream, using techniques such as Forward Error Correction.
   Another example is simulcast transmission, where a video source
   stream can be transmitted at high resolution and low resolution RTP
   packet streams at the same time.  In this case, a media processing
   function might choose to send one or both RTP packet streams onward
   to a receiver based on bandwidth availability or who the active
   speaker is in a multipoint conference.  Lastly, a transmitter might
   send a the same media content concurrently as two RTP packet streams
   using different encodings (e.g., VP8 in parallel with H.264) to allow
   a media processing function to select a media encoding that best
   matches the capabilities of the receiver.

   Other transport protocols may also be used to transmit real-time data
   or near-real-time data.  For example, SCTP can be utilized to carry
   application sharing or whiteboarding information as part of an
   overall interaction that includes real time media streams.  These
   additional transport protocols can be multiplexed with an RTP session
   via UDP encapsulation, thereby using a single pair of UDP ports.

   The RTCWEB protocol suite [I-D.ietf-rtcweb-transports] employs two
   layers of multiplexing:






York, et al.            Expires December 24, 2014               [Page 4]

Internet-Draft        DiffServ and RT Communication            June 2014


   1.  Individual source streams are carried in one or more individual
       RTP packet streams that can multiplexed into a single RTP
       session; and

   2.  A single RTP session could be multiplexed with other transport
       protocols via UDP encapsulation over a common pair of UDP ports.
       The resulting unidirectional UDP flow is uniquely identified by a
       5-tuple, i.e., a combination of two IP addresses (source and
       destination), two UDP ports (source and destination), and the use
       of the UDP protocol.

   For RTCWEB,an individual source stream is a MediaStreamTrack, and a
   MediaStream contains one or more MediaStreamTracks
   [W3C.WD-mediacapture-streams-20130903].  A MediaStreamTrack is
   transmitted as a source RTP packet stream plus zero or more
   redundancy RTP packet streams; when a MediaStream contains exactly
   one MediaStreamTrack, the entire MediaStream is transmistted as a
   source RTP packet stream plus zero or more redundancy RTP packet
   streams.

   For more information on use of RTP in RTCWEB, see .
   [I-D.ietf-rtcweb-rtp-usage].

   [Editor's note: need to add a couple of small additional notes here -
   point to proposal referenced in section 3.4 of I-D.ietf-avtext-rtp-
   grouping-taxonomy on multiplexing mulitple RTP sessions in one UDP
   5-tuple, also mention that use of the IPv6 flow label could yield a
   6-tuple, but in practice, it does not provide finer-grain distinction
   than a UDP 5-tuple.]

2.2.  Differentiated Services (DiffServ) Background

   The DiffServ architecture is intended to enable scalable service
   discrimination in the Internet without requiring per-flow state and
   signaling at every network node.  The services may be end-to-end or
   within a network; they include both those that can satisfy
   quantitative performance requirements (e.g., peak bandwidth) and
   those based on relative performance (e.g., "class" differentiation).
   Services can be constructed by a combination of well-defined building
   blocks deployed in network nodes that:

   o  classify traffic and setting bits in an IP header field at network
      boundaries or hosts,

   o  use those bits to determine how packets are forwarded by the nodes
      inside the network, and





York, et al.            Expires December 24, 2014               [Page 5]

Internet-Draft        DiffServ and RT Communication            June 2014


   o  condition the marked packets (e.g., meter, mark, shape, police) at
      network boundaries in accordance with the requirements or rules of
      each service.

   A network node that supports DiffServ includes a classifier that
   selects packets based on the value of the DS field in IP headers,
   along with buffer management and packet scheduling mechanisms capable
   of delivering the specific packet forwarding treatment indicated by
   the DS field value.  Setting of the DS field and fine-grain
   conditioning of marked packets need only be performed at network
   boundaries; internal network nodes operate on traffic aggregates that
   share a DS field value, or in some cases, a small set of related
   values.

   The DiffServ architecture[RFC2475] maintains distinctions among:

   o  the service provided to a traffic aggregate,

   o  the conditioning functions and per-hop behaviors (PHBs) used to
      realize services,

   o  the DS field value (DS codepoint, or DSCP) used to mark packets to
      select a per-hop behavior, and

   o  the particular implementation mechanisms that realize a per-hop
      behavior.

   This document focuses on PHBs and the usage of DSCPs to obtain those
   behaviors.  In a network node's forwarding path, the DSCP in a field
   in the IP packet header is mapped to a particular forwarding
   treatment, or per-hop behavior (PHB) that specifies the forwarding
   treatment.

   A per-hop behavior (PHB) is a description of the externally
   observable forwarding behavior of a network node for network traffic
   marked with a DSCP that selects that PHB.  In this context,
   "forwarding behavior" is a general - for example, if only one DSCP is
   used for all traffic on a link, the observable forwarding behavior
   (e.g., loss, delay, jitter) will often depend only on the relative
   loading of the link.  To obtain useful behavioral
   differentiation,multiple traffic subsets are marked with different
   DSCPs for different PHBs for which node resources such as buffer
   space and bandwidth are allocated.  PHBs provide the framework for a
   DiffServ network node to allocates resources to traffic subsets, with
   network-scope differentiated services constructed on top of this
   basic hop-by-hop (per-node) resource allocation mechanism.





York, et al.            Expires December 24, 2014               [Page 6]

Internet-Draft        DiffServ and RT Communication            June 2014


   The codepoints (DCSPs) may be chosen from a set of mandatory values
   (the class selector codepoints), or may be chosen from a set of
   recommended values defined in PHB specifications, or may be values
   may have purely local meaning to the network.

   The mandatory DSCPs are the class selector code points as specified
   in [RFC2474].  The class selector codepoints (CS0-CS7) extend the
   deprecated concept of IP Precedence in the IPv4 header; three bits
   are added, so that the class selector DSCPs are of the form 'xxx000'.
   The all-zero DSCP ('00000') designates a Default PHB that provides
   best-effort forwarding behavior and the remaining class selector code
   points were originally specified to provide relatively better per-
   hop-forwarding behavior in increasing numerical order, but:

   o  There is no requirement that any two adjacent class selector
      codepoints select different PHBs; adjacent class selector
      codepoints may use the same pool of resources on each network node
      in some networks.

   o  CS1 ('001000') was subsequently recommended for "less than best
      effort" service when such a service is offered by a network
      [RFC3662].  Not all networks offer such a service.

   Applications and traffic sources in general cannot rely upon
   different class selector codepoints providing differentiated services
   or upon the presence of a "less than best effort" service that is
   selected by the CS1 DSCP.

2.3.  Diffserv PHBs (Per-Hop Behaviors)

   Although Differentiated Services is a general architecture that may
   be used to implement a variety of services, three fundamental
   forwarding behaviors (PHBs) have been defined and characterized for
   general use.  These are:

   1.  Default Forwarding (DF) for elastic traffic [RFC2474].  The
       Default PHB is always selected by the all-zero DSCP.

   2.  Assured Forwarding (AF) [RFC2597] to provide differentiated
       service to elastic traffic.  Each instance of the AF behavior
       consists of three PHBs that differ only in drop precedence, e.g.,
       AF11, AF12 and AF13; such a set of three AF PHBs is referred to
       as an AF class, e.g., AF1x.  There are four defined AF classes,
       AF1x through AF4x.

   3.  Expedited Forwarding (EF) [RFC3246]intended for inelastic
       traffic.  Beyond the basic EF PHB, the VOICE-ADMIT PHB [RFC5865]
       is an admission controlled variant of the EF PHB.



York, et al.            Expires December 24, 2014               [Page 7]

Internet-Draft        DiffServ and RT Communication            June 2014


2.4.  DiffServ and Transport Protocols

   [Editor's note: This section and the recommendations in Section 4 are
   centered on TCP, UDP, and SCTP.  They could use generalization to
   include other transport protocols - DCCP is a likely one to include,
   although it is not necessary to include every known transport
   protocol.]

   Transport protocols provide data communication behaviors beyond those
   possible at the IP layer.  An important example is that TCP provides
   reliable in-order delivery of a data stream with congestion control.
   SCTP provides additional properties such as preservation of message
   boundaries, and the ability to avoid head-of-line blocking that may
   occur with TCP.  In contrast, UDP is a basic unreliable datagram
   protocol whose primary functionality is port-based multiplexing and
   demultiplexing on top of IP.

   Transport protocols that provide reliable delivery (e.g., TCP, SCTP)
   are sensitive to network reordering of traffic.  When a protocol that
   provides reliable delivery receives a packet other than the next
   expected packet for an ordered connection or stream, it usually
   assumes that the expected packet has been lost and respond with a
   retransmission request for that packet.  In addition, congestion
   control functionality in transport protocols usually infers
   congestion when packets are lost, creating an additional sensitivity
   to significant reordering - such reordering may be (mis-)interpreted
   as indicating congestion-caused packet loss, causing a reduction in
   transmission rate.  This remains true even when ECN [RFC3168] is in
   use, as receivers continue to treat missing packets as potential
   indications of congestion because extreme congestion conditions may
   cause ECN-capable network nodes to drop packets and ECN traffic may
   transit network nodes that do not support ECN.  Congestion control is
   an important aspect of the Internet architecture, see [RFC2914] for
   further discussion.

   In general, marking traffic with different DSCPs results in different
   PHBs being applied at network nodes, making reordering possible due
   to use of different pools of forwarding resources for each PHB.  The
   primary exception is that reordering is prohibited within each AF
   class (e.g., AF1x), as the three PHBs in an AF class differ solely in
   drop precedence.  Reordering within a PHB or AF class may occur for
   other transient reasons (e.g., route flap).

   UDP is the primary transport protocol that is not sensitive to
   reordering in the network, because it does not provide reliable
   delivery or congestion control.





York, et al.            Expires December 24, 2014               [Page 8]

Internet-Draft        DiffServ and RT Communication            June 2014


2.5.  Traffic Classifiers and DSCP Remarking

   DSCP markings are not end-to-end in general.  Each network is free to
   make its own decisions about what PHBs to use and which DSCP
   corresponds to each PHB.  While every PHB specification includes a
   recommended DSCP, and RFC 4594 [RFC4594] recommends their end-to-end
   usage, there is no requirement that every network support any PHBs or
   use any DSCPs, with the exception of the requirements for the class
   selector codepoints in RFC 2474 [RFC2474].  When DiffServ is used,
   the edge or boundary nodes of a network are responsible for ensuring
   that all traffic entering that network conforms to that network's
   policies for DSCP and PHB usage, and such nodes remark traffic
   (change the DSCP marking as part of traffic conditioning)
   accordingly.  As a result, DSCP remarking is possible at any network
   boundary, including the first network node that traffic sent by a
   host encounters.  Remarking is also possible within a network, e.g.,
   for traffic shaping.

   DSCP remarking is part of traffic conditioning; the traffic
   conditioning functionality applied to packets at a network node is
   determined by a traffic classifier [RFC2475].  BA (Behavioral
   Aggregate) traffic classifiers are usually used by network nodes
   within a DiffServ network; they classify traffic based solely on
   DSCPs.  MF (Multi-Field) classifiers are usually used by network
   nodes at the edges of a DiffServ network, but may also be used for
   finer grain traffic conditioning within a DiffServ network; they
   classify based on selected header fields, but typical implementations
   do not look beyond the traffic's 5-tuple in the IP and transport
   protocol headers.  As a result, when multiple DSCPs are used for
   network traffic that shares a 5-tuple, remarking at a network
   boundary (or within a network) may result in all of the traffic being
   forwarded with a single DSCP, removing any differentiation within the
   5-tuple beyond the point at which this remarking occurs.

   In addition, remarking may remove application-level distinctions in
   forwarding behavior - e.g., if multiple PHBs within an AF class are
   used to distinguish different types of frames within a video stream,
   token-bucket-based remarkers operating in Color-Blind mode (see
   [RFC2697] and [RFC2698] for examples) may remark solely based on flow
   rate and burst behavior, removing the drop precedence distinctions
   specified by the source.

   Backbone and other carrier networks may employ a small number of
   DSCPs (e.g., less than half a dozen) in order to manage a small
   number of traffic aggregates; hosts that use a larger number of DSCPs
   may find that much of the intended differentiation is removed by such
   networks.




York, et al.            Expires December 24, 2014               [Page 9]

Internet-Draft        DiffServ and RT Communication            June 2014


3.  RTP Multiplexing Background

   Section2 explains how source streams can be multiplexed over RTP
   sessions which can in turn be multiplexed over UDP with packet
   streams generated by other transport protocols.  This section
   provides background on why this level of packet stream multiplexing
   is desirable.  The rationale in this section applies both to
   multiplexing of source streams in RTP sessions and multiplexing of an
   RTP session with traffic from other transport protocols via UDP
   encapsulation.

   Multiplexing reduces the number of ports utilized for real-time and
   related communication in an overall interaction.  While a single
   endpoint might have plenty of ports available for communication, this
   traffic often traverses points in the network that are constrained on
   the number of available ports.  A good example is a NAT/FW device
   sitting at the network edge.  As the number of simultaneous protocol
   sessions increases, so does the burden placed on these devices in
   order to provide port mapping.

   Another reason for multiplexing is to help reduce the time required
   to establish bi-directional communication.  Since any two
   communicating users might be situated behind different NAT/FW
   devices, it is necessary to employ techniques like STUN/ICE/TURN in
   order to get traffic to flow between the two devices
   [I-D.ietf-rtcweb-transports].  Performing the tasks required of
   STUN/ICE/TURN take time and requiring an endpoint to perform these
   tasks for multiple protocol sessions can increase the time required.
   While tasks for different sessions can be performed in parallel, it
   is nonetheless necessary for applications to wait for all sessions to
   be opened before communication between to users can begin.  Reducing
   the number of STUN/ICE/TURN steps reduces the probability of losing a
   packet and introducing delay in setting up a communication session.
   Further, reducing the number of STUN/ICE/TURN tasks means that there
   is a lower burden placed on the STUN and TURN servers.

   Multiplexing may reduce the complexity and resulting load on an
   endpoint.  A single instance of STUN/ICE/TURN is simpler to execute
   and manage than multiple instances STUN/ICE/TURN operations happening
   in parallel, as the latter require synchronization and create more
   complex failure situations that have to be cleaned up by additional
   code.

4.  Recommendations

   The only use of multiple standardized PHBs and DSCPs that does not
   allow network reordering among packets marked with different DSCPs is
   the use of PHBs from a single AF class.  All other uses of multiple



York, et al.            Expires December 24, 2014              [Page 10]

Internet-Draft        DiffServ and RT Communication            June 2014


   PHBs and/or the class selector DSCPs allow network reordering of
   packets that are marked with different DSCPs.

   [Editor's note: The following are preliminary and subject to change.
   Please keep in mind that this is a -00 draft] Summary - Applications
   and other traffic sources:

   o  SHOULD NOT use different PHBs and DSCPs that may cause reordering
      within a single RTP packet stream.  If this is not done,
      significant network reordering may overwhelm implementation
      assumptions about limits on reordering (e.g., available buffering)
      resulting in poor user experiences and the like.

   o  SHOULD NOT use different PHBs and DSCPs that may cause reordering
      within an ordered session for a reliable transport protocol (e.g.,
      TCP, SCTP) , Receivers for such protocols interpret reordering as
      indicating loss of out-of-order packets causing undesired
      retransmission requests, and will infer congestion from
      significant reordering, causing throughput reduction.

   o  MAY use different PHBs and DSCPs that cause reordering within a
      single UDP 5-tuple, subject to the above constraints.  The service
      differentiation provided by such usage is unreliable, as it may be
      removed at network boundaries for the reasons described in
      Section 2.5 above.

   o  SHOULD NOT rely on end-to-end preservation of DSCPs or of drop
      precedence distinctions within an AF class (e.g., different DCSPs
      applied to different types of video frames), as network node
      remarking can change DSCPs and remove drop precedence distinctions
      see Section 2.5 above.

   o  SHOULD use the CS1 codepoint only for traffic that is acceptable
      to forward as best effort traffic, as network support for use of
      CS1 to select a "less than best effort" PHB is inconsistent.
      Further, some networks may treat CS1 as providing "better than
      best effort" forwarding behavior.

5.  Examples

   For real-time communications, one might want to mark the audio
   packets using EF and the video packets as AF41.  However, in a
   videoconference receiving the audio packets ahead of the video is not
   useful because lip sync is necessary between audio and video.  It may
   still be desirable to send audio with a PHB htat provides better
   service, because early arrival of audio helps assure smooth audio
   rendering, which is significantly more important than fully faithful
   video rendering.  There are limits, as some devices have difficulties



York, et al.            Expires December 24, 2014              [Page 11]

Internet-Draft        DiffServ and RT Communication            June 2014


   in synchronizizing voice and video when packets that need to be
   rendered together arrive at significantly different times.  It makes
   more sense to use different PHBs when the audio and video streams do
   not share a strict timing relationship.  For example, H.264 content
   sharing video does not need precise synchronization with
   videoconference audio, and could use a different PHB, as shared
   content is more tolerant to jitter, loss, and delay.

   Within a layered video RTP packet stream, ordering of frame
   communication is required, but importance of frame types varies,
   making use of PHBs with different drop precedences appropriate.  For
   example, I-frames that contain an entire image are usually more
   important than P-frames that contain only changes from the previous
   image because loss of a P-frame (or part thereof) can be recovered
   (at the latest) via the next I-frame, whereas loss of an I-frame (or
   part thereof) may cause rendering problems for all of the P-frames
   that depend on the I-frame.  For this reason, it is appropriate to
   mark I-frame packets with a PHB that has lower drop precedence than
   the PHB used for P-frames, as long as the PHBs preserve ordering
   among frames (e.g., are in an AF class) - AF41 for I-frames and AF43
   for P-frames is one possibility.

   Additional RTP packet streams in a real-time communication
   interaction could be marked with CS0 and carried as best effort
   traffic.  One example is real-time text transmitted as specified in
   RFC 4103[RFC4103]; best effort forwarding suffices when redundancy
   encoding is used (as required by RFC 4103).  Best effort forwarding
   suffices because such real-time text has loose timing requirements;
   RFC 4103 recommends sending text in chunks every 300ms.  Such text is
   technically real-time, but does not need a PHB promising
   differentiated network treatement, in contrast to audio or video
   streams.

6.  new section

7.  Acknowledgements

   This document is the result of many conversations that have occurred
   within multiple working groups in the RAI and TRANSPORT areas.
   Thanks for review and input from Harald Alvestrand, Brian Carpenter,
   Ruediger Geib and James Polk.

8.  IANA Considerations

   This document includes no request to IANA.






York, et al.            Expires December 24, 2014              [Page 12]

Internet-Draft        DiffServ and RT Communication            June 2014


9.  Security Considerations

   [Editor's Note: There are security considerations, start by pointing
   to security considerations in the relevant references.  Multiplexing
   multiple transport protocols onto a single UDP 5-tuple has firewall
   configuration and traffic inspection/monitoring implications.]

10.  References

10.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

10.2.  Informative References

   [I-D.ietf-avtext-rtp-grouping-taxonomy]
              Lennox, J., Gross, K., Nandakumar, S., and G. Salgueiro,
              "A Taxonomy of Grouping Semantics and Mechanisms for Real-
              Time Transport Protocol (RTP) Sources", draft-ietf-avtext-
              rtp-grouping-taxonomy-01 (work in progress), February
              2014.

   [I-D.ietf-rtcweb-overview]
              Alvestrand, H., "Overview: Real Time Protocols for Brower-
              based Applications", draft-ietf-rtcweb-overview-09 (work
              in progress), February 2014.

   [I-D.ietf-rtcweb-rtp-usage]
              Perkins, C., Westerlund, M., and J. Ott, "Web Real-Time
              Communication (WebRTC): Media Transport and Use of RTP",
              draft-ietf-rtcweb-rtp-usage-15 (work in progress), May
              2014.

   [I-D.ietf-rtcweb-transports]
              Alvestrand, H., "Transports for RTCWEB", draft-ietf-
              rtcweb-transports-04 (work in progress), April 2014.

   [RFC2474]  Nichols, K., Blake, S., Baker, F., and D. Black,
              "Definition of the Differentiated Services Field (DS
              Field) in the IPv4 and IPv6 Headers", RFC 2474, December
              1998.

   [RFC2475]  Blake, S., Black, D., Carlson, M., Davies, E., Wang, Z.,
              and W. Weiss, "An Architecture for Differentiated
              Services", RFC 2475, December 1998.





York, et al.            Expires December 24, 2014              [Page 13]

Internet-Draft        DiffServ and RT Communication            June 2014


   [RFC2597]  Heinanen, J., Baker, F., Weiss, W., and J. Wroclawski,
              "Assured Forwarding PHB Group", RFC 2597, June 1999.

   [RFC2697]  Heinanen, J. and R. Guerin, "A Single Rate Three Color
              Marker", RFC 2697, September 1999.

   [RFC2698]  Heinanen, J. and R. Guerin, "A Two Rate Three Color
              Marker", RFC 2698, September 1999.

   [RFC2914]  Floyd, S., "Congestion Control Principles", BCP 41, RFC
              2914, September 2000.

   [RFC3168]  Ramakrishnan, K., Floyd, S., and D. Black, "The Addition
              of Explicit Congestion Notification (ECN) to IP", RFC
              3168, September 2001.

   [RFC3246]  Davie, B., Charny, A., Bennet, J., Benson, K., Le Boudec,
              J., Courtney, W., Davari, S., Firoiu, V., and D.
              Stiliadis, "An Expedited Forwarding PHB (Per-Hop
              Behavior)", RFC 3246, March 2002.

   [RFC3550]  Schulzrinne, H., Casner, S., Frederick, R., and V.
              Jacobson, "RTP: A Transport Protocol for Real-Time
              Applications", STD 64, RFC 3550, July 2003.

   [RFC3662]  Bless, R., Nichols, K., and K. Wehrle, "A Lower Effort
              Per-Domain Behavior (PDB) for Differentiated Services",
              RFC 3662, December 2003.

   [RFC4103]  Hellstrom, G. and P. Jones, "RTP Payload for Text
              Conversation", RFC 4103, June 2005.

   [RFC4594]  Babiarz, J., Chan, K., and F. Baker, "Configuration
              Guidelines for DiffServ Service Classes", RFC 4594, August
              2006.

   [RFC5865]  Baker, F., Polk, J., and M. Dolly, "A Differentiated
              Services Code Point (DSCP) for Capacity-Admitted Traffic",
              RFC 5865, May 2010.

   [W3C.WD-mediacapture-streams-20130903]
              Burnett, D., Bergkvist, A., Jennings, C., and A.
              Narayanan, "Media Capture and Streams", World Wide Web
              Consortium WD WD-mediacapture-streams-20130903, September
              2013, <http://www.w3.org/TR/2013/
              WD-mediacapture-streams-20130903>.





York, et al.            Expires December 24, 2014              [Page 14]

Internet-Draft        DiffServ and RT Communication            June 2014


Authors' Addresses

   Dan York (editor)
   Internet Society
   Keene, N.H.
   USA

   Phone: +1-802-735-1624
   Email: dyork@lodestar2.com


   David Black (editor)
   EMC
   176 South Street
   Hopkinton, MA  01748
   USA

   Phone: +1 508 293-7953
   Email: david.black@emc.com


   Cullen Jennings
   Cisco
   170 West Tasman Drive
   MS: SJC-21/2
   San Jose, CA  95134
   USA

   Phone: +1 408 421-9990
   Email: fluffy@cisco.com


   Paul Jones
   Cisco
   7025 Kit Creek Road
   Research Triangle Park, MA  27502
   USA

   Phone: +1 919 476 2048
   Email: paulej@cisco.com











York, et al.            Expires December 24, 2014              [Page 15]
